#I work only with the EMPLOYERS_ALL_HRLY_WAGE and EMPLOYERS_ALL_CPSJOB (current job)
hourlyWage <- read.csv("hourly_wage.csv")
varNames <- read.csv("varNames.csv")

varNames <- varNames %>% 
  dplyr::mutate(varName = str_sub(varName, 1, str_length(varName)-8))

#The pivot_longer function converts all columns into rows
hourlyWageTidy <- hourlyWage %>% 
  tidyr::pivot_longer(
    -c(R0000100, R0173600, R0214700, R0214800),
    names_to = "id",
    values_to = "value",
    values_drop_na = TRUE
  ) %>% 
  dplyr::left_join(varNames) %>% 
  dplyr::rename(
    idCase = R0000100, 
    sampleId = R0173600, 
    race = R0214700, 
    sex = R0214800
  )
  
 indCurrent <- hourlyWageTidy %>% 
  dplyr::filter(varName == "EMPLOYERS_ALL_CPSJOB" & value == 1) %>% 
  dplyr::select(idCase, order, year) %>% 
  dplyr::mutate(indCurrent = 1) 

hourlyWageCurrent <- hourlyWageTidy %>% 
  dplyr::left_join(indCurrent) %>% 
  dplyr::filter(indCurrent == 1) %>% 
  dplyr::filter(varName == "EMPLOYERS_ALL_HRLY_WAGE") %>% 
  dplyr::filter(value != -4)

#At the end we group_by by what we need, we could group by idcase or job, for example.
summaryWageByYear <- hourlyWageCurrent %>% 
  dplyr::group_by(year) %>% 
  dplyr::summarise(mean = mean(value)/100,
                   median = median(value)/100,
                   min = min(value)/100,
                   max = max(value)/100)
